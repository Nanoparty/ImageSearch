{"version":3,"sources":["components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["SearchBar","state","val","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","userSubmit","onSubmit","this","className","type","placeholder","onChange","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spansRows","Math","ceil","spans","createRef","addEventListener","style","gridRowEnd","ref","src","image","urls","regular","alt","alt_description","ImageList","imgs","foundImages","map","img","id","App","images","onSearchSubmit","term","a","axios","get","params","query","headers","Authorization","response","data","results","ReactDOM","render","document","querySelector"],"mappings":"kTAiCeA,E,4MA7BXC,MAAQ,CAAEC,IAAK,I,EAEfC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAAEH,IAAKE,EAAME,OAAOC,S,EAGtCC,aAAe,SAACJ,GACZA,EAAMK,iBACN,EAAKC,MAAMC,WAAW,EAAKV,MAAMC,M,4CAGrC,WACI,OACI,8BACQ,uBAAMU,SAAUC,KAAKL,aAAeM,UAAU,gBAA9C,UACI,4CACA,uBACIA,UAAU,aACVC,KAAK,OACLR,MAAOM,KAAKZ,MAAMC,IAClBc,YAAY,SACZC,SAAUJ,KAAKV,yB,GAtBnBe,IAAMC,WC2BXC,G,wDA3BX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IASVW,SAAW,WACP,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aACnCC,EAAYC,KAAKC,KAAKN,EAAS,IACrC,EAAKjB,SAAS,CAAEwB,MAAOH,KAXnB,EAAKzB,MAAQ,CAAC4B,MAAO,GACrB,EAAKN,SAAWL,IAAMY,YAHP,E,qDAMnB,WACIjB,KAAKU,SAASC,QAAQO,iBAAiB,OAAQlB,KAAKQ,Y,oBASxD,WACI,OACI,qBAAKW,MAAO,CAACC,WAAW,QAAD,OAAUpB,KAAKZ,MAAM4B,QAA5C,SACI,qBAAKK,IAAKrB,KAAKU,SACXY,IAAKtB,KAAKH,MAAM0B,MAAMC,KAAKC,QAC3BC,IAAK1B,KAAKH,MAAM0B,MAAMI,wB,GAtBlBrB,cCYbsB,EAVG,SAAC/B,GACf,IAAMgC,EAAOhC,EAAMiC,YAAYC,KAAI,SAAAC,GAC/B,OAAO,cAAC,EAAD,CAAwBT,MAAOS,GAAfA,EAAIC,OAG/B,OACI,qBAAKhC,UAAU,cAAf,SAA8B4B,KC4BvBK,G,kNA9BX9C,MAAQ,CAAE+C,OAAQ,I,EAGlBC,e,uCAAiB,WAAOC,GAAP,eAAAC,EAAA,sEACUC,IAAMC,IAAI,6DAA8D,CAC3FC,OAAQ,CAAEC,MAAOL,GACjBM,QAAS,CACLC,cAAe,2DAJV,OACPC,EADO,OAQb,EAAKrD,SAAS,CAAE2C,OAAQU,EAASC,KAAKC,UARzB,2C,kGAWjB,WACI,OACI,qBAAK9C,UAAU,UAAf,SACI,sBAAKA,UAAU,QAAf,UAEI,cAAC,EAAD,CAAWH,WAAYE,KAAKoC,iBAC5B,yBACA,cAAC,EAAD,CAAWN,YAAa9B,KAAKZ,MAAM+C,kB,GAtBrC9B,IAAMC,YCHxB0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.62f1c649.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n    state = { val: '' }\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({ val: event.target.value })\r\n    }\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.userSubmit(this.state.val);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                    <form onSubmit={this.onFormSubmit}  className=\"flexContainer\">\r\n                        <h1>SnapSearch</h1>\r\n                        <input\r\n                            className=\"inputStyle\"\r\n                            type=\"text\"\r\n                            value={this.state.val}\r\n                            placeholder=\"Search\"\r\n                            onChange={this.onInputChange}\r\n                        />\r\n                    </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\r\n\r\n    class ImageCard extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {spans: 0};\r\n            this.imageRef = React.createRef();\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.imageRef.current.addEventListener('load', this.setSpans);\r\n        }\r\n\r\n        setSpans = () => {\r\n            const height = this.imageRef.current.clientHeight;\r\n        const spansRows = Math.ceil(height / 10 );\r\n        this.setState({ spans: spansRows });\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <div style={{gridRowEnd: `span ${this.state.spans}`}}>\r\n                    <img ref={this.imageRef}\r\n                        src={this.props.image.urls.regular}\r\n                        alt={this.props.image.alt_description} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    export default ImageCard;","import React from 'react';\r\nimport './ImageList.css';\r\nimport ImageCard from './ImageCard';\r\n\r\nconst ImageList = (props) => {\r\n    const imgs = props.foundImages.map(img => {\r\n        return <ImageCard key={img.id} image={img} />\r\n    });\r\n\r\n    return (\r\n        <div className=\"image__list\">{imgs}</div>\r\n    )\r\n}\r\n\r\nexport default ImageList;","import React from 'react';\r\nimport axios from 'axios';\r\nimport SearchBar from './SearchBar';\r\nimport ImageList from './ImageList';\r\nimport './App.css';\r\nconst API_KEY = process.env.REACT_APP_API_KEY\r\n\r\nclass App extends React.Component  {\r\n    state = { images: [] };\r\n    \r\n\r\n    onSearchSubmit = async (term) => {\r\n        const response = await axios.get('https://api.unsplash.com/search/photos?page=1&per_page=100', {\r\n            params: { query: term},\r\n            headers: {\r\n                Authorization: 'Client-ID RuNwRut6syrdoLMirt1OHZT3_upvFTMkYy5RyvxzAyo'\r\n            }\r\n        })\r\n\r\n        this.setState({ images: response.data.results })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"waves\">\r\n                    \r\n                    <SearchBar userSubmit={this.onSearchSubmit}/>\r\n                    <span></span>\r\n                    <ImageList foundImages={this.state.images} />\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}